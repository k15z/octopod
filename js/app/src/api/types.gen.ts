// This file is auto-generated by @hey-api/openapi-ts

export type BTCPrice = {
    USD: number;
};

export type Body_creator_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type Body_user_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type CreatePodcastRequest = {
    /**
     * Title of the podcast.
     */
    title: string;
    /**
     * Description of the podcast.
     */
    description: string;
    /**
     * Date and time of publication.
     */
    published_at: (string | null);
    /**
     * URL to the podcast cover image.
     */
    cover_url: (string | null);
    /**
     * Audio file with the full podcast.
     */
    audio_url: string;
};

export type CreatorAmount = {
    creator: string;
    amount: number;
    cover_url: string;
};

export type CreatorProfile = {
    name: string;
    email: string;
    uma_address: string;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ListPodcastsResponse = {
    results: Array<Podcast>;
};

export type ListPodclipsResponse = {
    results: Array<Podclip>;
};

export type MakePlaylistResponse = {
    duration: number;
    source: string;
    results: Array<Podclip>;
};

export type PaymentResponse = {
    id: string;
    created_at: string;
    sender_id: string;
    sender_email: string;
    amount: number;
};

export type Podcast = {
    id: string;
    /**
     * Title of the podcast.
     */
    title: string;
    /**
     * Description of the podcast.
     */
    description: string;
    /**
     * Name of the creator.
     */
    creator_name: string;
    /**
     * Date and time of publication.
     */
    published_at: (string | null);
    /**
     * Duration in seconds.
     */
    duration: number;
    /**
     * URL to the podcast cover image.
     */
    cover_url: (string | null);
    /**
     * Audio file with the full podcast.
     */
    audio_url: (string | null);
};

export type Podclip = {
    id: string;
    /**
     * Title of the podclip.
     */
    title: string;
    /**
     * Description of the podclip.
     */
    description: string;
    /**
     * Audio file with intro/outro.
     */
    audio_url: string;
    /**
     * Duration in seconds including intro/outro.
     */
    duration: number;
    /**
     * The podcast that the clip was extracted from.
     */
    podcast: Podcast;
    /**
     * Start time in seconds in the parent podcast.
     */
    start_time: number;
    /**
     * End time in seconds in the parent podcast.
     */
    end_time: number;
};

export type PresignedUrlResponse = {
    /**
     * URL to access the file after uploading.
     */
    file_url: string;
    /**
     * Presigned URL to upload the file.
     */
    presigned_url: string;
};

export type RegisterCreatorRequest = {
    email: string;
    name: string;
    uma_address: string;
};

export type RegisterUserRequest = {
    email: string;
    nwc_string: string;
    first_name: string;
    last_name: string;
    picture_url: (string | null);
    nwc_refresh_token: (string | null);
    nwc_expires_at: (number | null);
    access_token_expires_at: (number | null);
};

export type Token = {
    access_token: string;
    token_type: string;
};

export type UpdatePodcastRequest = {
    /**
     * Title of the podcast.
     */
    title: (string | null);
    /**
     * Description of the podcast.
     */
    description: (string | null);
    /**
     * Date and time of publication.
     */
    published_at: (string | null);
    /**
     * URL to the podcast cover image.
     */
    cover_url: (string | null);
};

export type UpdatePodclipRequest = {
    /**
     * Title of the podclip.
     */
    title: string;
    /**
     * Description of the podclip.
     */
    description: string;
};

export type UpdateUserRequest = {
    first_name: (string | null);
    last_name: (string | null);
    picture_url: (string | null);
    nwc_string: (string | null);
    nwc_refresh_token: (string | null);
    nwc_expires_at: (number | null);
    access_token_expires_at: (number | null);
};

export type UserProfile = {
    id: string;
    email: string;
    nwc_string: string;
    first_name: string;
    last_name: string;
    picture_url: (string | null);
};

export type UserStatistics = {
    weekly_spend: number;
    lifetime_spend: number;
    seconds_listened: number;
    seconds_saved: number;
    num_tips: number;
    num_plays: number;
    creator_amounts: Array<CreatorAmount>;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type ListPodcastsData = {
    query?: {
        q?: string;
    };
};

export type ListPodcastsResponse2 = (ListPodcastsResponse);

export type ListPodcastsError = (HTTPValidationError);

export type CreatePodcastData = {
    body: CreatePodcastRequest;
};

export type CreatePodcastResponse = (Podcast);

export type CreatePodcastError = (HTTPValidationError);

export type GetPodcastData = {
    path: {
        podcast_id: string;
    };
};

export type GetPodcastResponse = (Podcast);

export type GetPodcastError = (HTTPValidationError);

export type UpdatePodcastData = {
    body: UpdatePodcastRequest;
    path: {
        podcast_id: string;
    };
};

export type UpdatePodcastResponse = (Podcast);

export type UpdatePodcastError = (HTTPValidationError);

export type DeletePodcastData = {
    path: {
        podcast_id: string;
    };
};

export type DeletePodcastResponse = (unknown);

export type DeletePodcastError = (HTTPValidationError);

export type ListPodclipsData = {
    query?: {
        limit?: number;
        max_duration?: number;
        min_duration?: number;
        offset?: number;
        podcast_id?: (string | null);
        q?: string;
    };
};

export type ListPodclipsResponse2 = (ListPodclipsResponse);

export type ListPodclipsError = (HTTPValidationError);

export type GetPodclipData = {
    path: {
        podclip_id: string;
    };
};

export type GetPodclipResponse = (Podclip);

export type GetPodclipError = (HTTPValidationError);

export type UpdatePodclipData = {
    body: UpdatePodclipRequest;
    path: {
        podclip_id: string;
    };
};

export type UpdatePodclipResponse = (Podclip);

export type UpdatePodclipError = (HTTPValidationError);

export type DeletePodclipData = {
    path: {
        podclip_id: string;
    };
};

export type DeletePodclipResponse = (unknown);

export type DeletePodclipError = (HTTPValidationError);

export type SkipPodclipData = {
    path: {
        podclip_id: string;
    };
    query: {
        skip_time: number;
    };
};

export type SkipPodclipResponse = (unknown);

export type SkipPodclipError = (HTTPValidationError);

export type TipPodclipData = {
    path: {
        podclip_id: string;
    };
    query: {
        amount: number;
    };
};

export type TipPodclipResponse = (unknown);

export type TipPodclipError = (HTTPValidationError);

export type PlayPodclipData = {
    path: {
        podclip_id: string;
    };
};

export type PlayPodclipResponse = (unknown);

export type PlayPodclipError = (HTTPValidationError);

export type PlaylistData = {
    query: {
        seconds: number;
    };
};

export type PlaylistResponse = (MakePlaylistResponse);

export type PlaylistError = (HTTPValidationError);

export type PresignUrlData = {
    query: {
        kind: 'audio' | 'image';
    };
};

export type PresignUrlResponse = (PresignedUrlResponse);

export type PresignUrlError = (HTTPValidationError);

export type CreatorRegisterData = {
    body: RegisterCreatorRequest;
};

export type CreatorRegisterResponse = (Token);

export type CreatorRegisterError = (HTTPValidationError);

export type CreatorTokenData = {
    body: Body_creator_token;
};

export type CreatorTokenResponse = (Token);

export type CreatorTokenError = (HTTPValidationError);

export type CreatorProfileResponse = (CreatorProfile);

export type CreatorProfileError = unknown;

export type CreatorPaymentsResponse = (Array<PaymentResponse>);

export type CreatorPaymentsError = unknown;

export type UserRegisterData = {
    body: RegisterUserRequest;
};

export type UserRegisterResponse = (Token);

export type UserRegisterError = (HTTPValidationError);

export type UserTokenData = {
    body: Body_user_token;
};

export type UserTokenResponse = (Token);

export type UserTokenError = (HTTPValidationError);

export type UserProfileResponse = (UserProfile);

export type UserProfileError = unknown;

export type UpdateUserProfileData = {
    body: UpdateUserRequest;
};

export type UpdateUserProfileResponse = (UserProfile);

export type UpdateUserProfileError = (HTTPValidationError);

export type UserStatisticsResponse = (UserStatistics);

export type UserStatisticsError = unknown;

export type BtcPriceResponse = (BTCPrice);

export type BtcPriceError = unknown;