name: octopod
volumes:
  postgres_data:
services:

  js:
    build:
      context: ./js
      dockerfile: Dockerfile
    ports:
      - 8080:3000

  app:
    build:
      context: ./core
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/octopod
      - REDIS_HOST=redis
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: ./core
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DSN=postgres://postgres:postgres@postgres:5432/octopod
      - REDIS_HOST=redis
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    entrypoint: ["rq", "worker", "--with-scheduler"]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=octopod
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "18888:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - js
      - app
